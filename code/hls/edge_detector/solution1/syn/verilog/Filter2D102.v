// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D102 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1046;
reg   [0:0] exitcond460_i_reg_1046_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1055;
reg   [0:0] or_cond_i_i_reg_1055_pp0_iter1_reg;
reg   [0:0] icmp_reg_1011;
reg   [0:0] tmp_s_reg_1002;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] or_cond_i_reg_1076;
reg   [0:0] or_cond_i_reg_1076_pp0_iter3_reg;
reg   [10:0] t_V_2_reg_271;
wire   [0:0] exitcond461_i_fu_282_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_288_p2;
reg   [10:0] i_V_reg_997;
wire   [0:0] tmp_s_fu_294_p2;
wire   [0:0] tmp_98_0_not_fu_300_p2;
reg   [0:0] tmp_98_0_not_reg_1006;
wire   [0:0] icmp_fu_316_p2;
wire   [0:0] tmp_3_fu_322_p2;
reg   [0:0] tmp_3_reg_1016;
wire   [0:0] tmp_142_1_fu_328_p2;
reg   [0:0] tmp_142_1_reg_1020;
wire   [0:0] tmp_5_fu_334_p2;
reg   [0:0] tmp_5_reg_1024;
wire   [1:0] tmp_8_fu_340_p1;
reg   [1:0] tmp_8_reg_1031;
wire   [1:0] row_assign_8_1_t_fu_344_p2;
reg   [1:0] row_assign_8_1_t_reg_1036;
wire   [1:0] row_assign_8_2_t_fu_350_p2;
reg   [1:0] row_assign_8_2_t_reg_1041;
wire   [0:0] exitcond460_i_fu_360_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op106_read_state5;
reg    ap_predicate_op117_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_reg_1046_pp0_iter2_reg;
wire   [10:0] j_V_fu_366_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_414_p2;
wire  signed [11:0] x_fu_480_p3;
reg  signed [11:0] x_reg_1059;
wire   [1:0] tmp_12_fu_488_p1;
reg   [1:0] tmp_12_reg_1064;
reg   [1:0] tmp_12_reg_1064_pp0_iter1_reg;
wire   [0:0] brmerge_fu_492_p2;
reg   [0:0] brmerge_reg_1069;
reg   [0:0] brmerge_reg_1069_pp0_iter1_reg;
wire   [0:0] or_cond_i_fu_497_p2;
reg   [0:0] or_cond_i_reg_1076_pp0_iter1_reg;
reg   [0:0] or_cond_i_reg_1076_pp0_iter2_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1080;
reg   [10:0] k_buf_0_val_4_addr_reg_1086;
reg   [10:0] k_buf_0_val_5_addr_reg_1092;
wire   [7:0] src_kernel_win_0_va_6_fu_639_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1098;
wire   [7:0] src_kernel_win_0_va_7_fu_657_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1104;
wire   [7:0] src_kernel_win_0_va_8_fu_675_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1110;
reg   [0:0] p_Result_s_reg_1116;
wire   [7:0] p_Val2_1_fu_830_p2;
reg   [7:0] p_Val2_1_reg_1122;
reg   [2:0] tmp_24_reg_1127;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state5;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [10:0] t_V_reg_260;
reg    ap_block_state1;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_4_fu_505_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_134;
reg   [7:0] src_kernel_win_0_va_1_fu_138;
reg   [7:0] src_kernel_win_0_va_2_fu_142;
reg   [7:0] src_kernel_win_0_va_3_fu_146;
reg   [7:0] src_kernel_win_0_va_4_fu_150;
reg   [7:0] src_kernel_win_0_va_5_fu_154;
reg   [7:0] right_border_buf_0_s_fu_158;
wire   [7:0] col_buf_0_val_0_0_fu_547_p3;
reg   [7:0] right_border_buf_0_1_fu_162;
reg   [7:0] right_border_buf_0_2_fu_166;
reg   [7:0] right_border_buf_0_3_fu_170;
wire   [7:0] col_buf_0_val_1_0_fu_566_p3;
reg   [7:0] right_border_buf_0_4_fu_174;
reg   [7:0] right_border_buf_0_5_fu_178;
wire   [7:0] col_buf_0_val_2_0_fu_585_p3;
wire   [9:0] tmp_7_fu_306_p4;
wire   [9:0] tmp_9_fu_372_p4;
wire   [11:0] t_V_3_cast_fu_356_p1;
wire   [11:0] ImagLoc_x_fu_388_p2;
wire   [0:0] tmp_10_fu_394_p3;
wire   [0:0] tmp_1_fu_408_p2;
wire   [0:0] rev_fu_402_p2;
wire   [0:0] tmp_11_fu_420_p3;
wire   [11:0] p_assign_1_fu_428_p2;
wire   [11:0] p_p2_i_i_fu_434_p3;
wire   [11:0] p_assign_2_fu_448_p2;
wire   [0:0] tmp_11_not_fu_462_p2;
wire   [0:0] tmp_2_fu_442_p2;
wire   [0:0] sel_tmp7_fu_468_p2;
wire   [0:0] sel_tmp8_fu_474_p2;
wire   [11:0] p_assign_3_fu_454_p3;
wire   [0:0] icmp1_fu_382_p2;
wire  signed [31:0] col_assign_cast8_fu_502_p1;
wire   [1:0] col_assign_1_fu_530_p2;
wire   [7:0] tmp_13_fu_535_p5;
wire   [7:0] tmp_14_fu_554_p5;
wire   [7:0] tmp_15_fu_573_p5;
wire   [7:0] tmp_16_fu_628_p5;
wire   [7:0] tmp_18_fu_646_p5;
wire   [7:0] tmp_19_fu_664_p5;
wire   [8:0] tmp_184_0_cast_fu_691_p1;
wire   [8:0] r_V_0_2_cast_fu_695_p1;
wire  signed [8:0] sum_V_0_2_fu_698_p2;
wire   [8:0] r_V_10_1_fu_708_p3;
wire   [8:0] p_shl_fu_730_p3;
wire   [9:0] p_shl_cast_fu_737_p1;
wire  signed [9:0] r_V_10_1_2_fu_741_p2;
wire   [8:0] r_V_2_2_cast_fu_759_p1;
wire  signed [8:0] r_V_10_2_2_fu_762_p2;
wire  signed [10:0] sum_V_0_2_cast_fu_704_p1;
wire  signed [10:0] tmp_184_1_2_cast_fu_747_p1;
wire   [9:0] tmp_184_2_cast_cast_fu_755_p1;
wire   [9:0] tmp_184_1_cast_cast_fu_716_p1;
wire   [9:0] tmp21_fu_782_p2;
wire  signed [10:0] tmp_184_2_2_cast_fu_768_p1;
wire   [10:0] tmp21_cast_fu_788_p1;
wire   [10:0] tmp19_fu_776_p2;
wire   [10:0] tmp20_fu_792_p2;
wire   [10:0] p_Val2_s_fu_798_p2;
wire   [7:0] tmp_21_fu_724_p2;
wire   [7:0] tmp_20_fu_720_p1;
wire   [7:0] tmp_23_fu_772_p1;
wire   [7:0] tmp_22_fu_751_p1;
wire   [7:0] tmp24_fu_818_p2;
wire   [7:0] tmp22_fu_812_p2;
wire   [7:0] tmp23_fu_824_p2;
wire   [0:0] not_i_i_fu_887_p2;
wire   [0:0] tmp_i_i_fu_882_p2;
wire   [0:0] overflow_fu_892_p2;
wire   [0:0] tmp_8_i_i_fu_906_p2;
wire   [7:0] p_mux_i_i_cast_fu_898_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_84;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_enable_operation_97;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_predicate_op111_store_state5;
reg    ap_enable_operation_111;
reg    ap_predicate_op118_store_state5;
reg    ap_enable_operation_118;
reg    ap_enable_operation_86;
reg    ap_enable_operation_100;
reg    ap_predicate_op109_store_state5;
reg    ap_enable_operation_109;
reg    ap_predicate_op116_store_state5;
reg    ap_enable_operation_116;
reg    ap_predicate_op88_load_state4;
reg    ap_enable_operation_88;
reg    ap_predicate_op103_load_state5;
reg    ap_enable_operation_103;
reg    ap_predicate_op107_store_state5;
reg    ap_enable_operation_107;
reg    ap_predicate_op115_store_state5;
reg    ap_enable_operation_115;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_768;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Filter2D102_k_bufeOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D102_k_bufeOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D102_k_bufeOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

edge_detector_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
edge_detector_muxhbi_U34(
    .din0(right_border_buf_0_s_fu_158),
    .din1(right_border_buf_0_1_fu_162),
    .din2(8'd0),
    .din3(col_assign_1_fu_530_p2),
    .dout(tmp_13_fu_535_p5)
);

edge_detector_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
edge_detector_muxhbi_U35(
    .din0(right_border_buf_0_3_fu_170),
    .din1(right_border_buf_0_4_fu_174),
    .din2(8'd0),
    .din3(col_assign_1_fu_530_p2),
    .dout(tmp_14_fu_554_p5)
);

edge_detector_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
edge_detector_muxhbi_U36(
    .din0(right_border_buf_0_5_fu_178),
    .din1(right_border_buf_0_2_fu_166),
    .din2(8'd0),
    .din3(col_assign_1_fu_530_p2),
    .dout(tmp_15_fu_573_p5)
);

edge_detector_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
edge_detector_muxhbi_U37(
    .din0(col_buf_0_val_0_0_fu_547_p3),
    .din1(col_buf_0_val_1_0_fu_566_p3),
    .din2(col_buf_0_val_2_0_fu_585_p3),
    .din3(tmp_8_reg_1031),
    .dout(tmp_16_fu_628_p5)
);

edge_detector_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
edge_detector_muxhbi_U38(
    .din0(col_buf_0_val_0_0_fu_547_p3),
    .din1(col_buf_0_val_1_0_fu_566_p3),
    .din2(col_buf_0_val_2_0_fu_585_p3),
    .din3(row_assign_8_1_t_reg_1036),
    .dout(tmp_18_fu_646_p5)
);

edge_detector_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
edge_detector_muxhbi_U39(
    .din0(col_buf_0_val_0_0_fu_547_p3),
    .din1(col_buf_0_val_1_0_fu_566_p3),
    .din2(col_buf_0_val_2_0_fu_585_p3),
    .din3(row_assign_8_2_t_reg_1041),
    .dout(tmp_19_fu_664_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond461_i_fu_282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_fu_282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((exitcond461_i_fu_282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_360_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_271 <= j_V_fu_366_p2;
    end else if (((exitcond461_i_fu_282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_271 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_V_reg_260 <= i_V_reg_997;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_260 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1069 <= brmerge_fu_492_p2;
        or_cond_i_i_reg_1055 <= or_cond_i_i_fu_414_p2;
        or_cond_i_reg_1076 <= or_cond_i_fu_497_p2;
        tmp_12_reg_1064 <= tmp_12_fu_488_p1;
        x_reg_1059 <= x_fu_480_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1069_pp0_iter1_reg <= brmerge_reg_1069;
        exitcond460_i_reg_1046 <= exitcond460_i_fu_360_p2;
        exitcond460_i_reg_1046_pp0_iter1_reg <= exitcond460_i_reg_1046;
        or_cond_i_i_reg_1055_pp0_iter1_reg <= or_cond_i_i_reg_1055;
        or_cond_i_reg_1076_pp0_iter1_reg <= or_cond_i_reg_1076;
        tmp_12_reg_1064_pp0_iter1_reg <= tmp_12_reg_1064;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond460_i_reg_1046_pp0_iter2_reg <= exitcond460_i_reg_1046_pp0_iter1_reg;
        or_cond_i_reg_1076_pp0_iter2_reg <= or_cond_i_reg_1076_pp0_iter1_reg;
        or_cond_i_reg_1076_pp0_iter3_reg <= or_cond_i_reg_1076_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_997 <= i_V_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1011 <= icmp_fu_316_p2;
        row_assign_8_1_t_reg_1036 <= row_assign_8_1_t_fu_344_p2;
        row_assign_8_2_t_reg_1041 <= row_assign_8_2_t_fu_350_p2;
        tmp_142_1_reg_1020 <= tmp_142_1_fu_328_p2;
        tmp_3_reg_1016 <= tmp_3_fu_322_p2;
        tmp_5_reg_1024 <= tmp_5_fu_334_p2;
        tmp_8_reg_1031 <= tmp_8_fu_340_p1;
        tmp_98_0_not_reg_1006 <= tmp_98_0_not_fu_300_p2;
        tmp_s_reg_1002 <= tmp_s_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1046 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1080 <= tmp_4_fu_505_p1;
        k_buf_0_val_4_addr_reg_1086 <= tmp_4_fu_505_p1;
        k_buf_0_val_5_addr_reg_1092 <= tmp_4_fu_505_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1076_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_s_reg_1116 <= p_Val2_s_fu_798_p2[32'd10];
        p_Val2_1_reg_1122 <= p_Val2_1_fu_830_p2;
        tmp_24_reg_1127 <= {{p_Val2_s_fu_798_p2[10:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_162 <= right_border_buf_0_s_fu_158;
        right_border_buf_0_2_fu_166 <= right_border_buf_0_5_fu_178;
        right_border_buf_0_3_fu_170 <= col_buf_0_val_1_0_fu_566_p3;
        right_border_buf_0_4_fu_174 <= right_border_buf_0_3_fu_170;
        right_border_buf_0_5_fu_178 <= col_buf_0_val_2_0_fu_585_p3;
        right_border_buf_0_s_fu_158 <= col_buf_0_val_0_0_fu_547_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1046_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_138 <= src_kernel_win_0_va_fu_134;
        src_kernel_win_0_va_2_fu_142 <= src_kernel_win_0_va_7_reg_1104;
        src_kernel_win_0_va_3_fu_146 <= src_kernel_win_0_va_2_fu_142;
        src_kernel_win_0_va_4_fu_150 <= src_kernel_win_0_va_8_reg_1110;
        src_kernel_win_0_va_5_fu_154 <= src_kernel_win_0_va_4_fu_150;
        src_kernel_win_0_va_fu_134 <= src_kernel_win_0_va_6_reg_1098;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_6_reg_1098 <= src_kernel_win_0_va_6_fu_639_p3;
        src_kernel_win_0_va_7_reg_1104 <= src_kernel_win_0_va_7_fu_657_p3;
        src_kernel_win_0_va_8_reg_1110 <= src_kernel_win_0_va_8_fu_675_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_3_reg_1016 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_3_reg_1016 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_142_1_reg_1020 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_768)) begin
        if (((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_142_1_reg_1020 == 1'd1) & (icmp_reg_1011 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_142_1_reg_1020 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_3_reg_1016 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_768)) begin
        if (((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_3_reg_1016 == 1'd1) & (icmp_reg_1011 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_3_reg_1016 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1076_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1076_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op117_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op106_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_388_p2 = ($signed(12'd4095) + $signed(t_V_3_cast_fu_356_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1076_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op117_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op106_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1076_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op117_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op106_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1076_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op117_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op106_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op117_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op106_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((or_cond_i_reg_1076_pp0_iter3_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_768 = ((or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_100 = (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_103 = (ap_predicate_op103_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_107 = (ap_predicate_op107_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_109 = (ap_predicate_op109_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_111 = (ap_predicate_op111_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_115 = (ap_predicate_op115_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_116 = (ap_predicate_op116_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_118 = (ap_predicate_op118_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_84 = (exitcond460_i_reg_1046 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_86 = (exitcond460_i_reg_1046 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_88 = (ap_predicate_op88_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_97 = (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op103_load_state5 = ((brmerge_reg_1069_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op106_read_state5 = ((or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op107_store_state5 = ((tmp_3_reg_1016 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op109_store_state5 = ((tmp_142_1_reg_1020 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op111_store_state5 = ((tmp_3_reg_1016 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (icmp_reg_1011 == 1'd0) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op115_store_state5 = ((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op116_store_state5 = ((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op117_read_state5 = ((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op118_store_state5 = ((tmp_s_reg_1002 == 1'd1) & (icmp_reg_1011 == 1'd1) & (or_cond_i_i_reg_1055_pp0_iter1_reg == 1'd1) & (exitcond460_i_reg_1046_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op88_load_state4 = ((brmerge_reg_1069 == 1'd1) & (exitcond460_i_reg_1046 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign brmerge_fu_492_p2 = (tmp_98_0_not_reg_1006 | tmp_1_fu_408_p2);

assign col_assign_1_fu_530_p2 = (tmp_12_reg_1064_pp0_iter1_reg ^ 2'd3);

assign col_assign_cast8_fu_502_p1 = x_reg_1059;

assign col_buf_0_val_0_0_fu_547_p3 = ((brmerge_reg_1069_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_13_fu_535_p5);

assign col_buf_0_val_1_0_fu_566_p3 = ((brmerge_reg_1069_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_14_fu_554_p5);

assign col_buf_0_val_2_0_fu_585_p3 = ((brmerge_reg_1069_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_15_fu_573_p5);

assign exitcond460_i_fu_360_p2 = ((t_V_2_reg_271 == 11'd1922) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_282_p2 = ((t_V_reg_260 == 11'd1082) ? 1'b1 : 1'b0);

assign i_V_fu_288_p2 = (t_V_reg_260 + 11'd1);

assign icmp1_fu_382_p2 = ((tmp_9_fu_372_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_316_p2 = ((tmp_7_fu_306_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_V_fu_366_p2 = (t_V_2_reg_271 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_4_fu_505_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1080;

assign k_buf_0_val_4_address0 = tmp_4_fu_505_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1086;

assign k_buf_0_val_5_address0 = tmp_4_fu_505_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1092;

assign not_i_i_fu_887_p2 = ((tmp_24_reg_1127 != 3'd0) ? 1'b1 : 1'b0);

assign or_cond_i_fu_497_p2 = (icmp_reg_1011 & icmp1_fu_382_p2);

assign or_cond_i_i_fu_414_p2 = (tmp_1_fu_408_p2 & rev_fu_402_p2);

assign overflow_fu_892_p2 = (tmp_i_i_fu_882_p2 & not_i_i_fu_887_p2);

assign p_Val2_1_fu_830_p2 = (tmp22_fu_812_p2 + tmp23_fu_824_p2);

assign p_Val2_s_fu_798_p2 = (tmp19_fu_776_p2 + tmp20_fu_792_p2);

assign p_assign_1_fu_428_p2 = (12'd1 - t_V_3_cast_fu_356_p1);

assign p_assign_2_fu_448_p2 = ($signed(12'd3838) - $signed(p_p2_i_i_fu_434_p3));

assign p_assign_3_fu_454_p3 = ((or_cond_i_i_fu_414_p2[0:0] === 1'b1) ? ImagLoc_x_fu_388_p2 : p_assign_2_fu_448_p2);

assign p_dst_data_stream_V_din = ((tmp_8_i_i_fu_906_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_898_p3 : p_Val2_1_reg_1122);

assign p_mux_i_i_cast_fu_898_p3 = ((tmp_i_i_fu_882_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i_i_fu_434_p3 = ((tmp_11_fu_420_p3[0:0] === 1'b1) ? p_assign_1_fu_428_p2 : ImagLoc_x_fu_388_p2);

assign p_shl_cast_fu_737_p1 = p_shl_fu_730_p3;

assign p_shl_fu_730_p3 = {{src_kernel_win_0_va_7_reg_1104}, {1'd0}};

assign r_V_0_2_cast_fu_695_p1 = src_kernel_win_0_va_8_reg_1110;

assign r_V_10_1_2_fu_741_p2 = (10'd0 - p_shl_cast_fu_737_p1);

assign r_V_10_1_fu_708_p3 = {{src_kernel_win_0_va_3_fu_146}, {1'd0}};

assign r_V_10_2_2_fu_762_p2 = (9'd0 - r_V_2_2_cast_fu_759_p1);

assign r_V_2_2_cast_fu_759_p1 = src_kernel_win_0_va_6_reg_1098;

assign rev_fu_402_p2 = (tmp_10_fu_394_p3 ^ 1'd1);

assign row_assign_8_1_t_fu_344_p2 = (tmp_8_fu_340_p1 ^ 2'd1);

assign row_assign_8_2_t_fu_350_p2 = ($signed(2'd2) - $signed(tmp_8_fu_340_p1));

assign sel_tmp7_fu_468_p2 = (tmp_11_not_fu_462_p2 | tmp_10_fu_394_p3);

assign sel_tmp8_fu_474_p2 = (tmp_2_fu_442_p2 & sel_tmp7_fu_468_p2);

assign src_kernel_win_0_va_6_fu_639_p3 = ((tmp_5_reg_1024[0:0] === 1'b1) ? tmp_16_fu_628_p5 : col_buf_0_val_0_0_fu_547_p3);

assign src_kernel_win_0_va_7_fu_657_p3 = ((tmp_5_reg_1024[0:0] === 1'b1) ? tmp_18_fu_646_p5 : col_buf_0_val_1_0_fu_566_p3);

assign src_kernel_win_0_va_8_fu_675_p3 = ((tmp_5_reg_1024[0:0] === 1'b1) ? tmp_19_fu_664_p5 : col_buf_0_val_2_0_fu_585_p3);

assign start_out = real_start;

assign sum_V_0_2_cast_fu_704_p1 = sum_V_0_2_fu_698_p2;

assign sum_V_0_2_fu_698_p2 = (tmp_184_0_cast_fu_691_p1 - r_V_0_2_cast_fu_695_p1);

assign t_V_3_cast_fu_356_p1 = t_V_2_reg_271;

assign tmp19_fu_776_p2 = ($signed(sum_V_0_2_cast_fu_704_p1) + $signed(tmp_184_1_2_cast_fu_747_p1));

assign tmp20_fu_792_p2 = ($signed(tmp_184_2_2_cast_fu_768_p1) + $signed(tmp21_cast_fu_788_p1));

assign tmp21_cast_fu_788_p1 = tmp21_fu_782_p2;

assign tmp21_fu_782_p2 = (tmp_184_2_cast_cast_fu_755_p1 + tmp_184_1_cast_cast_fu_716_p1);

assign tmp22_fu_812_p2 = (tmp_21_fu_724_p2 + tmp_20_fu_720_p1);

assign tmp23_fu_824_p2 = (tmp_22_fu_751_p1 + tmp24_fu_818_p2);

assign tmp24_fu_818_p2 = (tmp_23_fu_772_p1 + src_kernel_win_0_va_1_fu_138);

assign tmp_10_fu_394_p3 = ImagLoc_x_fu_388_p2[32'd11];

assign tmp_11_fu_420_p3 = ImagLoc_x_fu_388_p2[32'd11];

assign tmp_11_not_fu_462_p2 = (tmp_1_fu_408_p2 ^ 1'd1);

assign tmp_12_fu_488_p1 = x_fu_480_p3[1:0];

assign tmp_142_1_fu_328_p2 = ((t_V_reg_260 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_184_0_cast_fu_691_p1 = src_kernel_win_0_va_5_fu_154;

assign tmp_184_1_2_cast_fu_747_p1 = r_V_10_1_2_fu_741_p2;

assign tmp_184_1_cast_cast_fu_716_p1 = r_V_10_1_fu_708_p3;

assign tmp_184_2_2_cast_fu_768_p1 = r_V_10_2_2_fu_762_p2;

assign tmp_184_2_cast_cast_fu_755_p1 = src_kernel_win_0_va_1_fu_138;

assign tmp_1_fu_408_p2 = (($signed(ImagLoc_x_fu_388_p2) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_20_fu_720_p1 = sum_V_0_2_fu_698_p2[7:0];

assign tmp_21_fu_724_p2 = src_kernel_win_0_va_3_fu_146 << 8'd1;

assign tmp_22_fu_751_p1 = r_V_10_1_2_fu_741_p2[7:0];

assign tmp_23_fu_772_p1 = r_V_10_2_2_fu_762_p2[7:0];

assign tmp_2_fu_442_p2 = (($signed(p_p2_i_i_fu_434_p3) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_3_fu_322_p2 = ((t_V_reg_260 == 11'd1) ? 1'b1 : 1'b0);

assign tmp_4_fu_505_p1 = $unsigned(col_assign_cast8_fu_502_p1);

assign tmp_5_fu_334_p2 = ((t_V_reg_260 > 11'd1080) ? 1'b1 : 1'b0);

assign tmp_7_fu_306_p4 = {{t_V_reg_260[10:1]}};

assign tmp_8_fu_340_p1 = t_V_reg_260[1:0];

assign tmp_8_i_i_fu_906_p2 = (p_Result_s_reg_1116 | overflow_fu_892_p2);

assign tmp_98_0_not_fu_300_p2 = (tmp_s_fu_294_p2 ^ 1'd1);

assign tmp_9_fu_372_p4 = {{t_V_2_reg_271[10:1]}};

assign tmp_i_i_fu_882_p2 = (p_Result_s_reg_1116 ^ 1'd1);

assign tmp_s_fu_294_p2 = ((t_V_reg_260 < 11'd1080) ? 1'b1 : 1'b0);

assign x_fu_480_p3 = ((sel_tmp8_fu_474_p2[0:0] === 1'b1) ? p_p2_i_i_fu_434_p3 : p_assign_3_fu_454_p3);

endmodule //Filter2D102
