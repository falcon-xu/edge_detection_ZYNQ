-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AddWeighted is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src1_data_stream_V_empty_n : IN STD_LOGIC;
    src1_data_stream_V_read : OUT STD_LOGIC;
    src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src2_data_stream_V_empty_n : IN STD_LOGIC;
    src2_data_stream_V_read : OUT STD_LOGIC;
    dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_V_full_n : IN STD_LOGIC;
    dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of AddWeighted is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src1_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_reg_976 : STD_LOGIC_VECTOR (0 downto 0);
    signal src2_data_stream_V_blk_n : STD_LOGIC;
    signal dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal exitcond_i_reg_976_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_5_reg_194 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_i_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_239_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_971 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_i_reg_976_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_976_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_251_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_reg_985 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_reg_990 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_99_reg_1005 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_i_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_reg_1015 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_reg_1020 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_i_reg_1025 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_1030 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_1030_pp0_iter26_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_1030_pp0_iter27_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_269_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_61_reg_1036 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_7_reg_1041 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1041_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1041_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_1041_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_reg_1050 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_63_fu_291_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_63_reg_1056 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_8_fu_305_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_8_reg_1061 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_309_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_reg_1066 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_5_i_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_reg_1071 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_reg_1071_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_reg_1071_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_320_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1077 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_i_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_i_reg_1084 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_i_reg_1084_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_2_fu_338_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_1090 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_1090_pp0_iter28_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_i_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1096_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_reg_1103 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1108 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1108_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_373_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_reg_1114 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_72_reg_1120 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1126 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1126_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_100_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_100_reg_1132 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_100_reg_1132_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_424_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_reg_1138 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_fu_494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_reg_1144 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_15_fu_506_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_15_reg_1149 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp2_i_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_reg_1156 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_reg_1161 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_reg_1167 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_reg_1173 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_1180 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1187 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_reg_1192 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_fu_590_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_27_i_reg_1198 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_fu_594_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_reg_1203 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range1_all_zeros_1_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1209 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_reg_1214 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_694_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_16_reg_1220 : STD_LOGIC_VECTOR (7 downto 0);
    signal deleted_zeros_fu_817_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_reg_1226 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_i_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_i_reg_1231 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_857_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_1236 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal t_V_reg_183 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_224_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_227_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_fu_230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i1_fu_298_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_3_i_fu_295_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_i_fu_332_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_66_fu_357_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_12_fu_387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_390_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_3_fu_400_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_s_fu_416_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal F2_2_cast_i_fu_421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_fu_428_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_11_i_fu_432_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_68_fu_442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_438_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_i_fu_450_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_i_fu_470_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_cast_i_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_i_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_479_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_14_fu_458_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal qb_fu_487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_fu_502_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp1_i_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_fu_531_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_cast_i_fu_528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_i_fu_550_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_i_fu_554_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lD_fu_560_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_cast_i_fu_536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_i_not_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_i_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_i_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_629_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_fu_637_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_650_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp7_i_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_i_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_656_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp12_demorgan_i_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_i_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_i_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_fu_632_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp9_i_fu_672_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_not_i_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp28_i_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_742_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_cond173_i_i_i_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_i_s_fu_752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond175_i_i_i_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_i_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_177_i_i_i_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_180_i_i_i_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_i_fu_802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_i_i_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_s_fu_794_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_i_fu_809_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_724_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_i_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_i_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_179_demorgan_i_i_i_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_179_demorgan_i_i_no_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_demorgan_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_i_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_i_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_demorgan_i_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_i_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp56_i_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_11_0_i_i_mux_fu_901_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp52_i_fu_934_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_205_ce : STD_LOGIC;
    signal grp_fu_209_ce : STD_LOGIC;
    signal grp_fu_214_ce : STD_LOGIC;
    signal grp_fu_219_ce : STD_LOGIC;
    signal grp_fu_224_ce : STD_LOGIC;
    signal grp_fu_227_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component edge_detector_fadlbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_detector_fmumb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_detector_uitncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_detector_fpeocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    edge_detector_fadlbW_U51 : component edge_detector_fadlbW
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t1_reg_1015,
        din1 => t2_reg_1020,
        ce => grp_fu_205_ce,
        dout => grp_fu_205_p2);

    edge_detector_fadlbW_U52 : component edge_detector_fadlbW
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_37_i_reg_1025,
        din1 => ap_const_lv32_0,
        ce => grp_fu_209_ce,
        dout => grp_fu_209_p2);

    edge_detector_fmumb6_U53 : component edge_detector_fmumb6
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i_99_reg_1005,
        din1 => ap_const_lv32_3F000000,
        ce => grp_fu_214_ce,
        dout => grp_fu_214_p2);

    edge_detector_fmumb6_U54 : component edge_detector_fmumb6
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_36_i_reg_1010,
        din1 => ap_const_lv32_3F000000,
        ce => grp_fu_219_ce,
        dout => grp_fu_219_p2);

    edge_detector_uitncg_U55 : component edge_detector_uitncg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_224_p0,
        ce => grp_fu_224_ce,
        dout => grp_fu_224_p1);

    edge_detector_uitncg_U56 : component edge_detector_uitncg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_227_p0,
        ce => grp_fu_227_ce,
        dout => grp_fu_227_p1);

    edge_detector_fpeocq_U57 : component edge_detector_fpeocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => sum_reg_1030,
        dout => d_assign_fu_230_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond1_i_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_i_fu_233_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                elsif (((exitcond1_i_fu_233_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_5_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_5_reg_194 <= j_V_fu_251_p2;
            elsif (((exitcond1_i_fu_233_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_5_reg_194 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                t_V_reg_183 <= i_V_reg_971;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_183 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                F2_2_reg_1090 <= F2_2_fu_338_p3;
                F2_reg_1077 <= F2_fu_320_p2;
                icmp_reg_1108 <= icmp_fu_367_p2;
                    p_Result_8_reg_1061(51 downto 0) <= p_Result_8_fu_305_p1(51 downto 0);
                pos1_reg_1114 <= pos1_fu_373_p2;
                tmp_2_i_reg_1103 <= tmp_2_i_fu_351_p2;
                tmp_5_i_reg_1071 <= tmp_5_i_fu_315_p2;
                tmp_72_reg_1120 <= pos1_fu_373_p2(11 downto 11);
                tmp_7_i_reg_1084 <= tmp_7_i_fu_326_p2;
                tmp_9_i_reg_1096 <= tmp_9_i_fu_346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                F2_2_reg_1090_pp0_iter28_reg <= F2_2_reg_1090;
                exitcond_i_reg_976_pp0_iter10_reg <= exitcond_i_reg_976_pp0_iter9_reg;
                exitcond_i_reg_976_pp0_iter11_reg <= exitcond_i_reg_976_pp0_iter10_reg;
                exitcond_i_reg_976_pp0_iter12_reg <= exitcond_i_reg_976_pp0_iter11_reg;
                exitcond_i_reg_976_pp0_iter13_reg <= exitcond_i_reg_976_pp0_iter12_reg;
                exitcond_i_reg_976_pp0_iter14_reg <= exitcond_i_reg_976_pp0_iter13_reg;
                exitcond_i_reg_976_pp0_iter15_reg <= exitcond_i_reg_976_pp0_iter14_reg;
                exitcond_i_reg_976_pp0_iter16_reg <= exitcond_i_reg_976_pp0_iter15_reg;
                exitcond_i_reg_976_pp0_iter17_reg <= exitcond_i_reg_976_pp0_iter16_reg;
                exitcond_i_reg_976_pp0_iter18_reg <= exitcond_i_reg_976_pp0_iter17_reg;
                exitcond_i_reg_976_pp0_iter19_reg <= exitcond_i_reg_976_pp0_iter18_reg;
                exitcond_i_reg_976_pp0_iter20_reg <= exitcond_i_reg_976_pp0_iter19_reg;
                exitcond_i_reg_976_pp0_iter21_reg <= exitcond_i_reg_976_pp0_iter20_reg;
                exitcond_i_reg_976_pp0_iter22_reg <= exitcond_i_reg_976_pp0_iter21_reg;
                exitcond_i_reg_976_pp0_iter23_reg <= exitcond_i_reg_976_pp0_iter22_reg;
                exitcond_i_reg_976_pp0_iter24_reg <= exitcond_i_reg_976_pp0_iter23_reg;
                exitcond_i_reg_976_pp0_iter25_reg <= exitcond_i_reg_976_pp0_iter24_reg;
                exitcond_i_reg_976_pp0_iter26_reg <= exitcond_i_reg_976_pp0_iter25_reg;
                exitcond_i_reg_976_pp0_iter27_reg <= exitcond_i_reg_976_pp0_iter26_reg;
                exitcond_i_reg_976_pp0_iter28_reg <= exitcond_i_reg_976_pp0_iter27_reg;
                exitcond_i_reg_976_pp0_iter29_reg <= exitcond_i_reg_976_pp0_iter28_reg;
                exitcond_i_reg_976_pp0_iter2_reg <= exitcond_i_reg_976_pp0_iter1_reg;
                exitcond_i_reg_976_pp0_iter3_reg <= exitcond_i_reg_976_pp0_iter2_reg;
                exitcond_i_reg_976_pp0_iter4_reg <= exitcond_i_reg_976_pp0_iter3_reg;
                exitcond_i_reg_976_pp0_iter5_reg <= exitcond_i_reg_976_pp0_iter4_reg;
                exitcond_i_reg_976_pp0_iter6_reg <= exitcond_i_reg_976_pp0_iter5_reg;
                exitcond_i_reg_976_pp0_iter7_reg <= exitcond_i_reg_976_pp0_iter6_reg;
                exitcond_i_reg_976_pp0_iter8_reg <= exitcond_i_reg_976_pp0_iter7_reg;
                exitcond_i_reg_976_pp0_iter9_reg <= exitcond_i_reg_976_pp0_iter8_reg;
                icmp_reg_1108_pp0_iter28_reg <= icmp_reg_1108;
                p_Result_7_reg_1041_pp0_iter27_reg <= p_Result_7_reg_1041;
                p_Result_7_reg_1041_pp0_iter28_reg <= p_Result_7_reg_1041_pp0_iter27_reg;
                p_Result_7_reg_1041_pp0_iter29_reg <= p_Result_7_reg_1041_pp0_iter28_reg;
                sum_reg_1030_pp0_iter26_reg <= sum_reg_1030;
                sum_reg_1030_pp0_iter27_reg <= sum_reg_1030_pp0_iter26_reg;
                tmp_5_i_reg_1071_pp0_iter28_reg <= tmp_5_i_reg_1071;
                tmp_5_i_reg_1071_pp0_iter29_reg <= tmp_5_i_reg_1071_pp0_iter28_reg;
                tmp_7_i_reg_1084_pp0_iter28_reg <= tmp_7_i_reg_1084;
                tmp_9_i_reg_1096_pp0_iter28_reg <= tmp_9_i_reg_1096;
                tmp_i_i_i_i_100_reg_1132_pp0_iter29_reg <= tmp_i_i_i_i_100_reg_1132;
                tmp_i_i_i_i_reg_1126_pp0_iter29_reg <= tmp_i_i_i_i_reg_1126;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter27_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_1_reg_1180 <= Range1_all_ones_1_fu_570_p2;
                Range1_all_zeros_1_reg_1209 <= Range1_all_zeros_1_fu_606_p2;
                Range2_V_1_reg_1203 <= Range2_V_1_fu_594_p2;
                p_Result_9_reg_1144 <= p_Val2_14_fu_458_p3(7 downto 7);
                p_Val2_15_reg_1149 <= p_Val2_15_fu_506_p2;
                rev1_reg_1173 <= rev1_fu_545_p2;
                sel_tmp2_i_reg_1156 <= sel_tmp2_i_fu_517_p2;
                sel_tmp34_i_reg_1214 <= sel_tmp34_i_fu_623_p2;
                sel_tmp3_i_reg_1161 <= sel_tmp3_i_fu_522_p2;
                tmp_21_i_reg_1167 <= tmp_21_i_fu_540_p2;
                tmp_26_i_reg_1192 <= tmp_26_i_fu_584_p2;
                    tmp_27_i_reg_1198(31 downto 0) <= tmp_27_i_fu_590_p1(31 downto 0);
                tmp_65_reg_1138 <= tmp_65_fu_424_p1;
                tmp_74_reg_1187 <= pos2_fu_531_p2(11 downto 11);
                tmp_i_i_i_i_100_reg_1132 <= tmp_i_i_i_i_100_fu_410_p2;
                tmp_i_i_i_i_reg_1126 <= tmp_i_i_i_i_fu_404_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter28_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                deleted_zeros_reg_1226 <= deleted_zeros_fu_817_p3;
                p_Val2_16_reg_1220 <= p_Val2_16_fu_694_p3;
                sel_tmp41_i_reg_1231 <= sel_tmp41_i_fu_837_p2;
                underflow_reg_1236 <= underflow_fu_857_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_i_reg_976 <= exitcond_i_fu_245_p2;
                exitcond_i_reg_976_pp0_iter1_reg <= exitcond_i_reg_976;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter25_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_tmp_V_reg_1050 <= ireg_V_fu_265_p1(62 downto 52);
                p_Result_7_reg_1041 <= ireg_V_fu_265_p1(63 downto 63);
                tmp_61_reg_1036 <= tmp_61_fu_269_p1;
                tmp_63_reg_1056 <= tmp_63_fu_291_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_971 <= i_V_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter26_reg = ap_const_lv1_0) and (p_Result_7_reg_1041 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                man_V_1_reg_1066 <= man_V_1_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter24_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_reg_1030 <= grp_fu_209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t1_reg_1015 <= grp_fu_214_p2;
                t2_reg_1020 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_36_i_reg_1010 <= grp_fu_227_p1;
                tmp_i_99_reg_1005 <= grp_fu_224_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_37_i_reg_1025 <= grp_fu_205_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_976 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_59_reg_990 <= src2_data_stream_V_dout;
                tmp_reg_985 <= src1_data_stream_V_dout;
            end if;
        end if;
    end process;
    p_Result_8_reg_1061(53 downto 52) <= "01";
    tmp_27_i_reg_1198(53 downto 32) <= "0000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, exitcond1_i_fu_233_p2, ap_CS_fsm_state2, exitcond_i_fu_245_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter29)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_i_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_i_fu_245_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((exitcond_i_fu_245_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        F2_2_cast_i_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(F2_2_reg_1090),32));

    F2_2_fu_338_p3 <= 
        F2_fu_320_p2 when (tmp_7_i_fu_326_p2(0) = '1') else 
        tmp_8_i_fu_332_p2;
    F2_fu_320_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_3_i_fu_295_p1));
    Range1_all_ones_1_fu_570_p2 <= (tmp_21_i_fu_540_p2 and tmp3_fu_564_p2);
    Range1_all_ones_2_i_fu_825_p2 <= (carry_1_i_i_i_fu_719_p2 and Range1_all_ones_2_i_s_fu_794_p3);
    Range1_all_ones_2_i_s_fu_794_p3 <= 
        Range1_all_ones_fu_764_p2 when (or_cond175_i_i_i_fu_760_p2(0) = '1') else 
        sel_tmp35_i_fu_789_p3;
    Range1_all_ones_fu_764_p2 <= (Range2_all_ones_1_i_s_fu_752_p3 and Range1_all_ones_1_reg_1180);
    Range1_all_zeros_1_fu_606_p2 <= "1" when (p_Val2_s_fu_416_p3 = ap_const_lv54_0) else "0";
    Range1_all_zeros_2_i_fu_809_p3 <= 
        p_180_i_i_i_fu_779_p2 when (or_cond175_i_i_i_fu_760_p2(0) = '1') else 
        sel_tmp39_i_fu_802_p3;
    Range1_all_zeros_fu_774_p2 <= (ap_const_lv1_1 xor Range1_all_ones_1_reg_1180);
    Range2_V_1_fu_594_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_s_fu_416_p3),to_integer(unsigned('0' & tmp_27_i_fu_590_p1(31-1 downto 0)))));
    Range2_all_ones_1_i_s_fu_752_p3 <= 
        Range2_all_ones_fu_747_p2 when (or_cond173_i_i_i_fu_737_p2(0) = '1') else 
        rev2_fu_732_p2;
    Range2_all_ones_fu_747_p2 <= "1" when (Range2_V_1_reg_1203 = r_V_fu_742_p2) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state34 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_976, ap_enable_reg_pp0_iter30, exitcond_i_reg_976_pp0_iter29_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((exitcond_i_reg_976_pp0_iter29_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_976 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_976 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_976, ap_enable_reg_pp0_iter30, exitcond_i_reg_976_pp0_iter29_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((exitcond_i_reg_976_pp0_iter29_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_976 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_976 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_976, ap_enable_reg_pp0_iter30, exitcond_i_reg_976_pp0_iter29_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((exitcond_i_reg_976_pp0_iter29_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_976 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_976 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state33_pp0_stage0_iter30_assign_proc : process(dst_data_stream_V_full_n, exitcond_i_reg_976_pp0_iter29_reg)
    begin
                ap_block_state33_pp0_stage0_iter30 <= ((exitcond_i_reg_976_pp0_iter29_reg = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, exitcond_i_reg_976)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_i_reg_976 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_976 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_i_fu_245_p2)
    begin
        if ((exitcond_i_fu_245_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_i_fu_233_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond1_i_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29)
    begin
        if (((ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond1_i_fu_233_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond1_i_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_fu_895_p2 <= (underflow_not_i_fu_878_p2 or p_179_demorgan_i_i_no_fu_889_p2);
    brmerge_i_i_not_i_fu_883_p2 <= (underflow_not_i_fu_878_p2 and p_179_demorgan_i_i_i_fu_873_p2);
    carry_1_i_i_i_fu_719_p2 <= (tmp2_fu_713_p2 and sel_tmp3_i_reg_1161);
    deleted_zeros_fu_817_p3 <= 
        Range1_all_ones_2_i_s_fu_794_p3 when (carry_1_i_i_i_fu_719_p2(0) = '1') else 
        Range1_all_zeros_2_i_fu_809_p3;

    dst_data_stream_V_blk_n_assign_proc : process(dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter30, exitcond_i_reg_976_pp0_iter29_reg)
    begin
        if (((exitcond_i_reg_976_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))) then 
            dst_data_stream_V_blk_n <= dst_data_stream_V_full_n;
        else 
            dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_V_din <= 
        p_Val2_11_0_i_i_mux_fu_901_p3 when (sel_tmp56_i_fu_952_p2(0) = '1') else 
        sel_tmp52_i_fu_934_p3;

    dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter30, exitcond_i_reg_976_pp0_iter29_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_976_pp0_iter29_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_data_stream_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_fu_233_p2 <= "1" when (t_V_reg_183 = ap_const_lv11_438) else "0";
    exitcond_i_fu_245_p2 <= "1" when (t_V_5_reg_194 = ap_const_lv11_780) else "0";

    grp_fu_205_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_205_ce <= ap_const_logic_1;
        else 
            grp_fu_205_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_209_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_209_ce <= ap_const_logic_1;
        else 
            grp_fu_209_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_214_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_214_ce <= ap_const_logic_1;
        else 
            grp_fu_214_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_219_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_219_ce <= ap_const_logic_1;
        else 
            grp_fu_219_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_224_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_224_ce <= ap_const_logic_1;
        else 
            grp_fu_224_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_224_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_985),32));

    grp_fu_227_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_227_ce <= ap_const_logic_1;
        else 
            grp_fu_227_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_227_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_reg_990),32));
    i_V_fu_239_p2 <= std_logic_vector(unsigned(t_V_reg_183) + unsigned(ap_const_lv11_1));
    icmp_fu_367_p2 <= "1" when (tmp_66_fu_357_p4 = ap_const_lv9_0) else "0";
    ireg_V_fu_265_p1 <= d_assign_fu_230_p1;
    j_V_fu_251_p2 <= std_logic_vector(unsigned(t_V_5_reg_194) + unsigned(ap_const_lv11_1));
    lD_fu_560_p1 <= tmp_24_i_fu_554_p2(1 - 1 downto 0);
    man_V_1_fu_309_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_8_fu_305_p1));
    not_sel_tmp28_i_fu_707_p2 <= (tmp_6_not_i_fu_702_p2 or sel_tmp12_demorgan_i_fu_679_p2);
    or_cond173_i_i_i_fu_737_p2 <= (tmp_26_i_reg_1192 and rev2_fu_732_p2);
    or_cond175_i_i_i_fu_760_p2 <= (tmp_26_i_reg_1192 and rev1_reg_1173);
    p_177_i_i_i_fu_785_p2 <= (rev1_reg_1173 or Range1_all_zeros_1_reg_1209);
    p_179_demorgan_i_i_i_fu_873_p2 <= (tmp5_fu_869_p2 or deleted_zeros_reg_1226);
    p_179_demorgan_i_i_no_fu_889_p2 <= (p_179_demorgan_i_i_i_fu_873_p2 xor ap_const_lv1_1);
    p_180_i_i_i_fu_779_p2 <= (tmp_28_i_fu_769_p2 and Range1_all_zeros_fu_774_p2);
    p_Result_10_fu_724_p3 <= p_Val2_16_fu_694_p3(7 downto 7);
    p_Result_8_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i1_fu_298_p3),54));
    p_Result_9_fu_494_p3 <= p_Val2_14_fu_458_p3(7 downto 7);
    p_Result_s_fu_479_p3 <= p_Val2_s_fu_416_p3(to_integer(unsigned(tmp_20_cast_i_fu_475_p1)) downto to_integer(unsigned(tmp_20_cast_i_fu_475_p1))) when (to_integer(unsigned(tmp_20_cast_i_fu_475_p1))>= 0 and to_integer(unsigned(tmp_20_cast_i_fu_475_p1))<=53) else "-";
    p_Val2_11_0_i_i_mux_fu_901_p3 <= 
        p_Val2_16_reg_1220 when (brmerge_i_i_not_i_fu_883_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_12_fu_387_p1 <= sum_reg_1030_pp0_iter27_reg;
    p_Val2_14_fu_458_p3 <= 
        tmp_67_fu_438_p1 when (tmp_2_i_reg_1103(0) = '1') else 
        tmp_15_i_fu_450_p3;
    p_Val2_15_fu_506_p2 <= std_logic_vector(unsigned(p_Val2_14_fu_458_p3) + unsigned(tmp_19_i_fu_502_p1));
    p_Val2_16_fu_694_p3 <= 
        tmp_16_i_fu_632_p2 when (sel_tmp13_i_fu_689_p2(0) = '1') else 
        sel_tmp9_i_fu_672_p3;
    p_Val2_s_fu_416_p3 <= 
        man_V_1_reg_1066 when (p_Result_7_reg_1041_pp0_iter27_reg(0) = '1') else 
        p_Result_8_reg_1061;
        pos1_cast_i_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_reg_1114),32));

    pos1_fu_373_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) + unsigned(F2_fu_320_p2));
        pos2_cast_i_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_531_p2),32));

    pos2_fu_531_p2 <= std_logic_vector(unsigned(ap_const_lv12_9) + unsigned(F2_reg_1077));
    qb_fu_487_p3 <= 
        p_Result_7_reg_1041_pp0_iter27_reg when (tmp_17_i_fu_465_p2(0) = '1') else 
        p_Result_s_fu_479_p3;
    r_V_fu_742_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_27_i_reg_1198(31-1 downto 0)))));
    rev1_fu_545_p2 <= (tmp_72_reg_1120 xor ap_const_lv1_1);
    rev2_fu_732_p2 <= (tmp_74_reg_1187 xor ap_const_lv1_1);
    rev_fu_644_p2 <= (tmp_70_fu_637_p3 xor ap_const_lv1_1);
    sel_tmp12_demorgan_i_fu_679_p2 <= (tmp_9_i_reg_1096_pp0_iter28_reg or tmp_7_i_reg_1084_pp0_iter28_reg);
    sel_tmp12_i_fu_683_p2 <= (sel_tmp12_demorgan_i_fu_679_p2 xor ap_const_lv1_1);
    sel_tmp13_i_fu_689_p2 <= (sel_tmp12_i_fu_683_p2 and icmp_reg_1108_pp0_iter28_reg);
    sel_tmp1_i_fu_512_p2 <= (tmp_9_i_reg_1096 xor ap_const_lv1_1);
    sel_tmp2_i_fu_517_p2 <= (tmp_7_i_reg_1084 and sel_tmp1_i_fu_512_p2);
    sel_tmp33_i_fu_618_p2 <= (tmp_72_reg_1120 or tmp_26_i_not_fu_612_p2);
    sel_tmp34_i_fu_623_p2 <= (tmp_30_i_fu_600_p2 and sel_tmp33_i_fu_618_p2);
    sel_tmp35_i_fu_789_p3 <= 
        Range1_all_ones_1_reg_1180 when (sel_tmp34_i_reg_1214(0) = '1') else 
        rev1_reg_1173;
    sel_tmp39_i_fu_802_p3 <= 
        Range1_all_zeros_fu_774_p2 when (sel_tmp34_i_reg_1214(0) = '1') else 
        p_177_i_i_i_fu_785_p2;
    sel_tmp3_i_fu_522_p2 <= (sel_tmp2_i_fu_517_p2 and p_Result_9_fu_494_p3);
    sel_tmp41_i_fu_837_p2 <= (tmp_21_i_reg_1167 xor ap_const_lv1_1);
    sel_tmp46_i_fu_848_p2 <= (tmp4_fu_842_p2 and p_Result_7_reg_1041_pp0_iter28_reg);
    sel_tmp47_i_fu_853_p2 <= (tmp_21_i_reg_1167 and p_Result_7_reg_1041_pp0_iter28_reg);
    sel_tmp4_i_fu_656_p3 <= 
        p_Val2_15_reg_1149 when (sel_tmp3_i_reg_1161(0) = '1') else 
        sel_tmp_i_fu_650_p3;
    sel_tmp50_i_demorgan_fu_908_p2 <= (tmp_i_i_i_i_reg_1126_pp0_iter29_reg and tmp_i_i_i_i_100_reg_1132_pp0_iter29_reg);
    sel_tmp50_i_fu_912_p2 <= (sel_tmp50_i_demorgan_fu_908_p2 xor ap_const_lv1_1);
    sel_tmp51_i_fu_918_p2 <= (tmp_5_i_reg_1071_pp0_iter29_reg and sel_tmp50_i_fu_912_p2);
    sel_tmp52_i_fu_934_p3 <= 
        ap_const_lv8_0 when (tmp_37_fu_929_p2(0) = '1') else 
        p_Val2_16_reg_1220;
    sel_tmp55_demorgan_i_fu_941_p2 <= (tmp_demorgan_i_fu_865_p2 or tmp_5_i_reg_1071_pp0_iter29_reg);
    sel_tmp55_i_fu_946_p2 <= (sel_tmp55_demorgan_i_fu_941_p2 xor ap_const_lv1_1);
    sel_tmp56_i_fu_952_p2 <= (sel_tmp55_i_fu_946_p2 and brmerge_i_fu_895_p2);
    sel_tmp7_i_fu_662_p2 <= (p_Result_9_reg_1144 xor ap_const_lv1_1);
    sel_tmp8_i_fu_667_p2 <= (sel_tmp7_i_fu_662_p2 and sel_tmp2_i_reg_1156);
    sel_tmp9_i_fu_672_p3 <= 
        p_Val2_15_reg_1149 when (sel_tmp8_i_fu_667_p2(0) = '1') else 
        sel_tmp4_i_fu_656_p3;
    sel_tmp_i_fu_650_p3 <= 
        tmp_65_reg_1138 when (tmp_9_i_reg_1096_pp0_iter28_reg(0) = '1') else 
        ap_const_lv8_0;

    src1_data_stream_V_blk_n_assign_proc : process(src1_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_976)
    begin
        if (((exitcond_i_reg_976 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src1_data_stream_V_blk_n <= src1_data_stream_V_empty_n;
        else 
            src1_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src1_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_976, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_976 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src1_data_stream_V_read <= ap_const_logic_1;
        else 
            src1_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src2_data_stream_V_blk_n_assign_proc : process(src2_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_976)
    begin
        if (((exitcond_i_reg_976 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src2_data_stream_V_blk_n <= src2_data_stream_V_empty_n;
        else 
            src2_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src2_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_976, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_976 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src2_data_stream_V_read <= ap_const_logic_1;
        else 
            src2_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp2_fu_713_p2 <= (rev_fu_644_p2 and not_sel_tmp28_i_fu_707_p2);
    tmp3_fu_564_p2 <= (rev1_fu_545_p2 and lD_fu_560_p1);
    tmp4_fu_842_p2 <= (sel_tmp41_i_fu_837_p2 and p_Result_10_fu_724_p3);
    tmp5_fu_869_p2 <= (sel_tmp41_i_reg_1231 or p_Result_7_reg_1041_pp0_iter29_reg);
    tmp_10_i_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(F2_2_cast_i_fu_421_p1),54));
    tmp_11_i_fu_432_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_416_p3),to_integer(unsigned('0' & tmp_10_i_fu_428_p1(31-1 downto 0)))));
    tmp_15_i_fu_450_p3 <= 
        ap_const_lv8_FF when (tmp_68_fu_442_p3(0) = '1') else 
        ap_const_lv8_0;
    tmp_16_i_fu_632_p2 <= std_logic_vector(shift_left(unsigned(tmp_65_reg_1138),to_integer(unsigned('0' & tmp_64_fu_629_p1(8-1 downto 0)))));
    tmp_17_i_fu_465_p2 <= "1" when (signed(F2_reg_1077) > signed(ap_const_lv12_36)) else "0";
    tmp_18_i_fu_470_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(F2_reg_1077));
    tmp_19_i_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_fu_487_p3),8));
    tmp_20_cast_i_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_i_fu_470_p2),32));
    tmp_21_i_fu_540_p2 <= "1" when (signed(pos1_reg_1114) < signed(ap_const_lv12_36)) else "0";
    tmp_23_i_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos1_cast_i_fu_528_p1),54));
    tmp_24_i_fu_554_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_fu_416_p3),to_integer(unsigned('0' & tmp_23_i_fu_550_p1(31-1 downto 0)))));
    tmp_26_i_fu_584_p2 <= "1" when (signed(pos2_fu_531_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_26_i_not_fu_612_p2 <= (tmp_26_i_fu_584_p2 xor ap_const_lv1_1);
    tmp_27_i_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos2_cast_i_fu_536_p1),54));
    tmp_28_i_fu_769_p2 <= "1" when (Range2_V_1_reg_1203 = ap_const_lv54_0) else "0";
    tmp_2_i_fu_351_p2 <= "1" when (unsigned(F2_2_fu_338_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_30_i_fu_600_p2 <= "1" when (pos2_fu_531_p2 = ap_const_lv12_36) else "0";
    tmp_31_i_fu_831_p2 <= (ap_const_lv1_1 xor Range1_all_ones_2_i_fu_825_p2);
    tmp_37_fu_929_p2 <= (underflow_reg_1236 or tmp_s_fu_923_p2);
    tmp_3_i_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_1050),12));
    tmp_5_i_fu_315_p2 <= "1" when (tmp_61_reg_1036 = ap_const_lv63_0) else "0";
    tmp_61_fu_269_p1 <= ireg_V_fu_265_p1(63 - 1 downto 0);
    tmp_63_fu_291_p1 <= ireg_V_fu_265_p1(52 - 1 downto 0);
    tmp_64_fu_629_p1 <= F2_2_reg_1090_pp0_iter28_reg(8 - 1 downto 0);
    tmp_65_fu_424_p1 <= p_Val2_s_fu_416_p3(8 - 1 downto 0);
    tmp_66_fu_357_p4 <= F2_2_fu_338_p3(11 downto 3);
    tmp_67_fu_438_p1 <= tmp_11_i_fu_432_p2(8 - 1 downto 0);
    tmp_68_fu_442_p3 <= p_Val2_12_fu_387_p1(31 downto 31);
    tmp_6_not_i_fu_702_p2 <= (icmp_reg_1108_pp0_iter28_reg xor ap_const_lv1_1);
    tmp_70_fu_637_p3 <= p_Val2_15_reg_1149(7 downto 7);
    tmp_7_i_fu_326_p2 <= "1" when (signed(F2_fu_320_p2) > signed(ap_const_lv12_0)) else "0";
    tmp_8_i_fu_332_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(F2_fu_320_p2));
    tmp_9_i_fu_346_p2 <= "1" when (exp_tmp_V_reg_1050 = ap_const_lv11_433) else "0";
    tmp_V_3_fu_400_p1 <= p_Val2_12_fu_387_p1(23 - 1 downto 0);
    tmp_V_fu_390_p4 <= p_Val2_12_fu_387_p1(30 downto 23);
    tmp_demorgan_i_fu_865_p2 <= (tmp_i_i_i_i_reg_1126_pp0_iter29_reg and tmp_i_i_i_i_100_reg_1132_pp0_iter29_reg);
    tmp_i1_fu_298_p3 <= (ap_const_lv1_1 & tmp_63_reg_1056);
    tmp_i_i_i_i_100_fu_410_p2 <= "0" when (tmp_V_3_fu_400_p1 = ap_const_lv23_0) else "1";
    tmp_i_i_i_i_fu_404_p2 <= "1" when (tmp_V_fu_390_p4 = ap_const_lv8_FF) else "0";
    tmp_s_fu_923_p2 <= (tmp_demorgan_i_fu_865_p2 or sel_tmp51_i_fu_918_p2);
    underflow_fu_857_p3 <= 
        tmp_31_i_fu_831_p2 when (sel_tmp47_i_fu_853_p2(0) = '1') else 
        sel_tmp46_i_fu_848_p2;
    underflow_not_i_fu_878_p2 <= (underflow_reg_1236 xor ap_const_lv1_1);
end behav;
