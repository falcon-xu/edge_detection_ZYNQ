-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D102 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D102 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_43A : STD_LOGIC_VECTOR (10 downto 0) := "10000111010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_782 : STD_LOGIC_VECTOR (10 downto 0) := "11110000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_780 : STD_LOGIC_VECTOR (11 downto 0) := "011110000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_EFE : STD_LOGIC_VECTOR (11 downto 0) := "111011111110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond460_i_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_reg_1046_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1055_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1011 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1002 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal or_cond_i_reg_1076 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1076_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_271 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond461_i_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_288_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_997 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_0_not_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_0_not_reg_1006 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1016 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_1_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_1_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1024 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_340_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_reg_1031 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_fu_344_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_reg_1036 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_fu_350_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_reg_1041 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op106_read_state5 : BOOLEAN;
    signal ap_predicate_op117_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond460_i_reg_1046_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_366_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_480_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_reg_1059 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_488_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_reg_1064 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_reg_1064_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1069 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1069_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1076_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1076_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1080 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1086 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1092 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_6_fu_639_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1098 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_657_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1104 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_675_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1110 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1116 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_830_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_1122 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_reg_1127 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state5 : STD_LOGIC;
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_260 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_4_fu_505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_547_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_566_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_585_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_306_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_372_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_3_cast_fu_356_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_388_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_428_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_fu_434_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_2_fu_448_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_not_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_454_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp1_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_cast8_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_1_fu_530_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_535_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_554_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_573_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_628_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_646_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_664_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_184_0_cast_fu_691_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_0_2_cast_fu_695_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sum_V_0_2_fu_698_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_10_1_fu_708_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_fu_730_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_737_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_10_1_2_fu_741_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_2_2_cast_fu_759_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_10_2_2_fu_762_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sum_V_0_2_cast_fu_704_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_184_1_2_cast_fu_747_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_184_2_cast_cast_fu_755_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_184_1_cast_cast_fu_716_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp21_fu_782_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_184_2_2_cast_fu_768_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp21_cast_fu_788_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp19_fu_776_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp20_fu_792_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_fu_798_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_724_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_720_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_772_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_751_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_fu_818_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp22_fu_812_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp23_fu_824_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal not_i_i_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_i_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_898_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_84 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_97 : BOOLEAN;
    signal ap_enable_state5_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op111_store_state5 : BOOLEAN;
    signal ap_enable_operation_111 : BOOLEAN;
    signal ap_predicate_op118_store_state5 : BOOLEAN;
    signal ap_enable_operation_118 : BOOLEAN;
    signal ap_enable_operation_86 : BOOLEAN;
    signal ap_enable_operation_100 : BOOLEAN;
    signal ap_predicate_op109_store_state5 : BOOLEAN;
    signal ap_enable_operation_109 : BOOLEAN;
    signal ap_predicate_op116_store_state5 : BOOLEAN;
    signal ap_enable_operation_116 : BOOLEAN;
    signal ap_predicate_op88_load_state4 : BOOLEAN;
    signal ap_enable_operation_88 : BOOLEAN;
    signal ap_predicate_op103_load_state5 : BOOLEAN;
    signal ap_enable_operation_103 : BOOLEAN;
    signal ap_predicate_op107_store_state5 : BOOLEAN;
    signal ap_enable_operation_107 : BOOLEAN;
    signal ap_predicate_op115_store_state5 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_768 : BOOLEAN;

    component edge_detector_muxhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2D102_k_bufeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D102_k_bufeOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D102_k_bufeOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D102_k_bufeOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    edge_detector_muxhbi_U34 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_158,
        din1 => right_border_buf_0_1_fu_162,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_fu_530_p2,
        dout => tmp_13_fu_535_p5);

    edge_detector_muxhbi_U35 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_170,
        din1 => right_border_buf_0_4_fu_174,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_fu_530_p2,
        dout => tmp_14_fu_554_p5);

    edge_detector_muxhbi_U36 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_178,
        din1 => right_border_buf_0_2_fu_166,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_fu_530_p2,
        dout => tmp_15_fu_573_p5);

    edge_detector_muxhbi_U37 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_547_p3,
        din1 => col_buf_0_val_1_0_fu_566_p3,
        din2 => col_buf_0_val_2_0_fu_585_p3,
        din3 => tmp_8_reg_1031,
        dout => tmp_16_fu_628_p5);

    edge_detector_muxhbi_U38 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_547_p3,
        din1 => col_buf_0_val_1_0_fu_566_p3,
        din2 => col_buf_0_val_2_0_fu_585_p3,
        din3 => row_assign_8_1_t_reg_1036,
        dout => tmp_18_fu_646_p5);

    edge_detector_muxhbi_U39 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_547_p3,
        din1 => col_buf_0_val_1_0_fu_566_p3,
        din2 => col_buf_0_val_2_0_fu_585_p3,
        din3 => row_assign_8_2_t_reg_1041,
        dout => tmp_19_fu_664_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond461_i_fu_282_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond460_i_fu_360_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond461_i_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state5)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((exitcond461_i_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_360_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_271 <= j_V_fu_366_p2;
            elsif (((exitcond461_i_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_271 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                t_V_reg_260 <= i_V_reg_997;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_260 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_360_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1069 <= brmerge_fu_492_p2;
                or_cond_i_i_reg_1055 <= or_cond_i_i_fu_414_p2;
                or_cond_i_reg_1076 <= or_cond_i_fu_497_p2;
                tmp_12_reg_1064 <= tmp_12_fu_488_p1;
                x_reg_1059 <= x_fu_480_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1069_pp0_iter1_reg <= brmerge_reg_1069;
                exitcond460_i_reg_1046 <= exitcond460_i_fu_360_p2;
                exitcond460_i_reg_1046_pp0_iter1_reg <= exitcond460_i_reg_1046;
                or_cond_i_i_reg_1055_pp0_iter1_reg <= or_cond_i_i_reg_1055;
                or_cond_i_reg_1076_pp0_iter1_reg <= or_cond_i_reg_1076;
                tmp_12_reg_1064_pp0_iter1_reg <= tmp_12_reg_1064;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond460_i_reg_1046_pp0_iter2_reg <= exitcond460_i_reg_1046_pp0_iter1_reg;
                or_cond_i_reg_1076_pp0_iter2_reg <= or_cond_i_reg_1076_pp0_iter1_reg;
                or_cond_i_reg_1076_pp0_iter3_reg <= or_cond_i_reg_1076_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_997 <= i_V_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_fu_282_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1011 <= icmp_fu_316_p2;
                row_assign_8_1_t_reg_1036 <= row_assign_8_1_t_fu_344_p2;
                row_assign_8_2_t_reg_1041 <= row_assign_8_2_t_fu_350_p2;
                tmp_142_1_reg_1020 <= tmp_142_1_fu_328_p2;
                tmp_3_reg_1016 <= tmp_3_fu_322_p2;
                tmp_5_reg_1024 <= tmp_5_fu_334_p2;
                tmp_8_reg_1031 <= tmp_8_fu_340_p1;
                tmp_98_0_not_reg_1006 <= tmp_98_0_not_fu_300_p2;
                tmp_s_reg_1002 <= tmp_s_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1046 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1080 <= tmp_4_fu_505_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1086 <= tmp_4_fu_505_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1092 <= tmp_4_fu_505_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1076_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_s_reg_1116 <= p_Val2_s_fu_798_p2(10 downto 10);
                p_Val2_1_reg_1122 <= p_Val2_1_fu_830_p2;
                tmp_24_reg_1127 <= p_Val2_s_fu_798_p2(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_162 <= right_border_buf_0_s_fu_158;
                right_border_buf_0_2_fu_166 <= right_border_buf_0_5_fu_178;
                right_border_buf_0_3_fu_170 <= col_buf_0_val_1_0_fu_566_p3;
                right_border_buf_0_4_fu_174 <= right_border_buf_0_3_fu_170;
                right_border_buf_0_5_fu_178 <= col_buf_0_val_2_0_fu_585_p3;
                right_border_buf_0_s_fu_158 <= col_buf_0_val_0_0_fu_547_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1046_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_138 <= src_kernel_win_0_va_fu_134;
                src_kernel_win_0_va_2_fu_142 <= src_kernel_win_0_va_7_reg_1104;
                src_kernel_win_0_va_3_fu_146 <= src_kernel_win_0_va_2_fu_142;
                src_kernel_win_0_va_4_fu_150 <= src_kernel_win_0_va_8_reg_1110;
                src_kernel_win_0_va_5_fu_154 <= src_kernel_win_0_va_4_fu_150;
                src_kernel_win_0_va_fu_134 <= src_kernel_win_0_va_6_reg_1098;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_6_reg_1098 <= src_kernel_win_0_va_6_fu_639_p3;
                src_kernel_win_0_va_7_reg_1104 <= src_kernel_win_0_va_7_fu_657_p3;
                src_kernel_win_0_va_8_reg_1110 <= src_kernel_win_0_va_8_fu_675_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, exitcond461_i_fu_282_p2, ap_CS_fsm_state2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_fu_282_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_388_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_3_cast_fu_356_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, or_cond_i_reg_1076_pp0_iter3_reg, ap_predicate_op106_read_state5, ap_predicate_op117_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1076_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op106_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, or_cond_i_reg_1076_pp0_iter3_reg, ap_predicate_op106_read_state5, ap_predicate_op117_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1076_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op106_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, or_cond_i_reg_1076_pp0_iter3_reg, ap_predicate_op106_read_state5, ap_predicate_op117_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1076_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op106_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op106_read_state5, ap_predicate_op117_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op117_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op106_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter4_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1076_pp0_iter3_reg)
    begin
                ap_block_state7_pp0_stage0_iter4 <= ((or_cond_i_reg_1076_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_768_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg)
    begin
                ap_condition_768 <= ((or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter2_state5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond461_i_fu_282_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_fu_282_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_100_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg)
    begin
                ap_enable_operation_100 <= (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_103_assign_proc : process(ap_predicate_op103_load_state5)
    begin
                ap_enable_operation_103 <= (ap_predicate_op103_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_107_assign_proc : process(ap_predicate_op107_store_state5)
    begin
                ap_enable_operation_107 <= (ap_predicate_op107_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_109_assign_proc : process(ap_predicate_op109_store_state5)
    begin
                ap_enable_operation_109 <= (ap_predicate_op109_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_111_assign_proc : process(ap_predicate_op111_store_state5)
    begin
                ap_enable_operation_111 <= (ap_predicate_op111_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_115_assign_proc : process(ap_predicate_op115_store_state5)
    begin
                ap_enable_operation_115 <= (ap_predicate_op115_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_116_assign_proc : process(ap_predicate_op116_store_state5)
    begin
                ap_enable_operation_116 <= (ap_predicate_op116_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_118_assign_proc : process(ap_predicate_op118_store_state5)
    begin
                ap_enable_operation_118 <= (ap_predicate_op118_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_84_assign_proc : process(exitcond460_i_reg_1046)
    begin
                ap_enable_operation_84 <= (exitcond460_i_reg_1046 = ap_const_lv1_0);
    end process;


    ap_enable_operation_86_assign_proc : process(exitcond460_i_reg_1046)
    begin
                ap_enable_operation_86 <= (exitcond460_i_reg_1046 = ap_const_lv1_0);
    end process;


    ap_enable_operation_88_assign_proc : process(ap_predicate_op88_load_state4)
    begin
                ap_enable_operation_88 <= (ap_predicate_op88_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_97_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg)
    begin
                ap_enable_operation_97 <= (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state5_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op103_load_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, brmerge_reg_1069_pp0_iter1_reg)
    begin
                ap_predicate_op103_load_state5 <= ((brmerge_reg_1069_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op106_read_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011)
    begin
                ap_predicate_op106_read_state5 <= ((or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op107_store_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_3_reg_1016)
    begin
                ap_predicate_op107_store_state5 <= ((tmp_3_reg_1016 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op109_store_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_142_1_reg_1020)
    begin
                ap_predicate_op109_store_state5 <= ((tmp_142_1_reg_1020 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op111_store_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_3_reg_1016)
    begin
                ap_predicate_op111_store_state5 <= ((tmp_3_reg_1016 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op115_store_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002)
    begin
                ap_predicate_op115_store_state5 <= ((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op116_store_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002)
    begin
                ap_predicate_op116_store_state5 <= ((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op117_read_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002)
    begin
                ap_predicate_op117_read_state5 <= ((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op118_store_state5_assign_proc : process(exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002)
    begin
                ap_predicate_op118_store_state5 <= ((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op88_load_state4_assign_proc : process(exitcond460_i_reg_1046, brmerge_reg_1069)
    begin
                ap_predicate_op88_load_state4 <= ((brmerge_reg_1069 = ap_const_lv1_1) and (exitcond460_i_reg_1046 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    brmerge_fu_492_p2 <= (tmp_98_0_not_reg_1006 or tmp_1_fu_408_p2);
    col_assign_1_fu_530_p2 <= (tmp_12_reg_1064_pp0_iter1_reg xor ap_const_lv2_3);
        col_assign_cast8_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1059),32));

    col_buf_0_val_0_0_fu_547_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1069_pp0_iter1_reg(0) = '1') else 
        tmp_13_fu_535_p5;
    col_buf_0_val_1_0_fu_566_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1069_pp0_iter1_reg(0) = '1') else 
        tmp_14_fu_554_p5;
    col_buf_0_val_2_0_fu_585_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1069_pp0_iter1_reg(0) = '1') else 
        tmp_15_fu_573_p5;
    exitcond460_i_fu_360_p2 <= "1" when (t_V_2_reg_271 = ap_const_lv11_782) else "0";
    exitcond461_i_fu_282_p2 <= "1" when (t_V_reg_260 = ap_const_lv11_43A) else "0";
    i_V_fu_288_p2 <= std_logic_vector(unsigned(t_V_reg_260) + unsigned(ap_const_lv11_1));
    icmp1_fu_382_p2 <= "0" when (tmp_9_fu_372_p4 = ap_const_lv10_0) else "1";
    icmp_fu_316_p2 <= "0" when (tmp_7_fu_306_p4 = ap_const_lv10_0) else "1";

    internal_ap_ready_assign_proc : process(exitcond461_i_fu_282_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_fu_282_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_366_p2 <= std_logic_vector(unsigned(t_V_2_reg_271) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_4_fu_505_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1080;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002, tmp_3_reg_1016, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_reg_1016 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002, tmp_3_reg_1016, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_reg_1016 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_4_fu_505_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1086;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002, tmp_142_1_reg_1020, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_142_1_reg_1020 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1011, tmp_s_reg_1002, tmp_142_1_reg_1020, k_buf_0_val_3_q0, ap_condition_768)
    begin
        if ((ap_const_boolean_1 = ap_condition_768)) then
            if (((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((tmp_142_1_reg_1020 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002, tmp_142_1_reg_1020, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_142_1_reg_1020 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_4_fu_505_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1092;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002, tmp_3_reg_1016, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_reg_1016 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1011, tmp_s_reg_1002, tmp_3_reg_1016, k_buf_0_val_4_q0, ap_condition_768)
    begin
        if ((ap_const_boolean_1 = ap_condition_768)) then
            if (((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((tmp_3_reg_1016 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002, tmp_3_reg_1016, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_reg_1016 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_fu_887_p2 <= "0" when (tmp_24_reg_1127 = ap_const_lv3_0) else "1";
    or_cond_i_fu_497_p2 <= (icmp_reg_1011 and icmp1_fu_382_p2);
    or_cond_i_i_fu_414_p2 <= (tmp_1_fu_408_p2 and rev_fu_402_p2);
    overflow_fu_892_p2 <= (tmp_i_i_fu_882_p2 and not_i_i_fu_887_p2);
    p_Val2_1_fu_830_p2 <= std_logic_vector(unsigned(tmp22_fu_812_p2) + unsigned(tmp23_fu_824_p2));
    p_Val2_s_fu_798_p2 <= std_logic_vector(unsigned(tmp19_fu_776_p2) + unsigned(tmp20_fu_792_p2));
    p_assign_1_fu_428_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_3_cast_fu_356_p1));
    p_assign_2_fu_448_p2 <= std_logic_vector(signed(ap_const_lv12_EFE) - signed(p_p2_i_i_fu_434_p3));
    p_assign_3_fu_454_p3 <= 
        ImagLoc_x_fu_388_p2 when (or_cond_i_i_fu_414_p2(0) = '1') else 
        p_assign_2_fu_448_p2;

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, or_cond_i_reg_1076_pp0_iter3_reg)
    begin
        if (((or_cond_i_reg_1076_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_mux_i_i_cast_fu_898_p3 when (tmp_8_i_i_fu_906_p2(0) = '1') else 
        p_Val2_1_reg_1122;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, or_cond_i_reg_1076_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1076_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_898_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_fu_882_p2(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i_i_fu_434_p3 <= 
        p_assign_1_fu_428_p2 when (tmp_11_fu_420_p3(0) = '1') else 
        ImagLoc_x_fu_388_p2;
    p_shl_cast_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_730_p3),10));
    p_shl_fu_730_p3 <= (src_kernel_win_0_va_7_reg_1104 & ap_const_lv1_0);

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, exitcond460_i_reg_1046_pp0_iter1_reg, or_cond_i_i_reg_1055_pp0_iter1_reg, icmp_reg_1011, tmp_s_reg_1002)
    begin
        if ((((tmp_s_reg_1002 = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_1) and (or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((or_cond_i_i_reg_1055_pp0_iter1_reg = ap_const_lv1_1) and (icmp_reg_1011 = ap_const_lv1_0) and (exitcond460_i_reg_1046_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op106_read_state5, ap_predicate_op117_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op117_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op106_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_0_2_cast_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1110),9));
    r_V_10_1_2_fu_741_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(p_shl_cast_fu_737_p1));
    r_V_10_1_fu_708_p3 <= (src_kernel_win_0_va_3_fu_146 & ap_const_lv1_0);
    r_V_10_2_2_fu_762_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_2_2_cast_fu_759_p1));
    r_V_2_2_cast_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1098),9));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev_fu_402_p2 <= (tmp_10_fu_394_p3 xor ap_const_lv1_1);
    row_assign_8_1_t_fu_344_p2 <= (tmp_8_fu_340_p1 xor ap_const_lv2_1);
    row_assign_8_2_t_fu_350_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_8_fu_340_p1));
    sel_tmp7_fu_468_p2 <= (tmp_11_not_fu_462_p2 or tmp_10_fu_394_p3);
    sel_tmp8_fu_474_p2 <= (tmp_2_fu_442_p2 and sel_tmp7_fu_468_p2);
    src_kernel_win_0_va_6_fu_639_p3 <= 
        tmp_16_fu_628_p5 when (tmp_5_reg_1024(0) = '1') else 
        col_buf_0_val_0_0_fu_547_p3;
    src_kernel_win_0_va_7_fu_657_p3 <= 
        tmp_18_fu_646_p5 when (tmp_5_reg_1024(0) = '1') else 
        col_buf_0_val_1_0_fu_566_p3;
    src_kernel_win_0_va_8_fu_675_p3 <= 
        tmp_19_fu_664_p5 when (tmp_5_reg_1024(0) = '1') else 
        col_buf_0_val_2_0_fu_585_p3;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

        sum_V_0_2_cast_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_V_0_2_fu_698_p2),11));

    sum_V_0_2_fu_698_p2 <= std_logic_vector(unsigned(tmp_184_0_cast_fu_691_p1) - unsigned(r_V_0_2_cast_fu_695_p1));
    t_V_3_cast_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_271),12));
    tmp19_fu_776_p2 <= std_logic_vector(signed(sum_V_0_2_cast_fu_704_p1) + signed(tmp_184_1_2_cast_fu_747_p1));
    tmp20_fu_792_p2 <= std_logic_vector(signed(tmp_184_2_2_cast_fu_768_p1) + signed(tmp21_cast_fu_788_p1));
    tmp21_cast_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp21_fu_782_p2),11));
    tmp21_fu_782_p2 <= std_logic_vector(unsigned(tmp_184_2_cast_cast_fu_755_p1) + unsigned(tmp_184_1_cast_cast_fu_716_p1));
    tmp22_fu_812_p2 <= std_logic_vector(unsigned(tmp_21_fu_724_p2) + unsigned(tmp_20_fu_720_p1));
    tmp23_fu_824_p2 <= std_logic_vector(unsigned(tmp_22_fu_751_p1) + unsigned(tmp24_fu_818_p2));
    tmp24_fu_818_p2 <= std_logic_vector(unsigned(tmp_23_fu_772_p1) + unsigned(src_kernel_win_0_va_1_fu_138));
    tmp_10_fu_394_p3 <= ImagLoc_x_fu_388_p2(11 downto 11);
    tmp_11_fu_420_p3 <= ImagLoc_x_fu_388_p2(11 downto 11);
    tmp_11_not_fu_462_p2 <= (tmp_1_fu_408_p2 xor ap_const_lv1_1);
    tmp_12_fu_488_p1 <= x_fu_480_p3(2 - 1 downto 0);
    tmp_142_1_fu_328_p2 <= "1" when (t_V_reg_260 = ap_const_lv11_0) else "0";
    tmp_184_0_cast_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_154),9));
        tmp_184_1_2_cast_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_1_2_fu_741_p2),11));

    tmp_184_1_cast_cast_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_1_fu_708_p3),10));
        tmp_184_2_2_cast_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_2_2_fu_762_p2),11));

    tmp_184_2_cast_cast_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_138),10));
    tmp_1_fu_408_p2 <= "1" when (signed(ImagLoc_x_fu_388_p2) < signed(ap_const_lv12_780)) else "0";
    tmp_20_fu_720_p1 <= sum_V_0_2_fu_698_p2(8 - 1 downto 0);
    tmp_21_fu_724_p2 <= std_logic_vector(shift_left(unsigned(src_kernel_win_0_va_3_fu_146),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_22_fu_751_p1 <= r_V_10_1_2_fu_741_p2(8 - 1 downto 0);
    tmp_23_fu_772_p1 <= r_V_10_2_2_fu_762_p2(8 - 1 downto 0);
    tmp_2_fu_442_p2 <= "1" when (signed(p_p2_i_i_fu_434_p3) < signed(ap_const_lv12_780)) else "0";
    tmp_3_fu_322_p2 <= "1" when (t_V_reg_260 = ap_const_lv11_1) else "0";
    tmp_4_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast8_fu_502_p1),64));
    tmp_5_fu_334_p2 <= "1" when (unsigned(t_V_reg_260) > unsigned(ap_const_lv11_438)) else "0";
    tmp_7_fu_306_p4 <= t_V_reg_260(10 downto 1);
    tmp_8_fu_340_p1 <= t_V_reg_260(2 - 1 downto 0);
    tmp_8_i_i_fu_906_p2 <= (p_Result_s_reg_1116 or overflow_fu_892_p2);
    tmp_98_0_not_fu_300_p2 <= (tmp_s_fu_294_p2 xor ap_const_lv1_1);
    tmp_9_fu_372_p4 <= t_V_2_reg_271(10 downto 1);
    tmp_i_i_fu_882_p2 <= (p_Result_s_reg_1116 xor ap_const_lv1_1);
    tmp_s_fu_294_p2 <= "1" when (unsigned(t_V_reg_260) < unsigned(ap_const_lv11_438)) else "0";
    x_fu_480_p3 <= 
        p_p2_i_i_fu_434_p3 when (sel_tmp8_fu_474_p2(0) = '1') else 
        p_assign_3_fu_454_p3;
end behav;
